" Specify the character encoding used in the script.
scriptencoding utf-8

" " " " " " " " " " " " " " " " " " " " " " " " " " " " " " " " " " " " " " " "
" Mappings
" " " " " " " " " " " " " " " " " " " " " " " " " " " " " " " " " " " " " " " "

" map:  normal, visual, operator-pending
" map!: insert, command-line
" nmap: normal
" vmap: visual
" omap: operator-pending
" cmap: command-line
" imap: insert
" lmap: insert, command-line, lang-arg
"

""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
"                         Plugin-specific configuration
"
""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""

" plug's directory for plugins.  Run ":PlugInstall" to install new plugins.
call plug#begin('~/.vim/plugged')

Plug 'airblade/vim-gitgutter'

Plug 'arcticicestudio/nord-vim'

Plug 'junegunn/goyo.vim'

Plug 'ajmwagar/vim-deus'

Plug 'preservim/nerdtree'

Plug 'fatih/vim-go', { 'do': ':GoUpdateBinaries' }

Plug 'dense-analysis/ale'

call plug#end()

""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
"                                   Mappings
"
""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""

" Use F2 and F3 to switch between tabs.
map <F2> gt<CR>
map <F3> gT<CR>

" Switch from file.c to file.h and vice versa using <F4>.
map <F4> :e %:p:s,.h$,.X123X,:s,.c$,.h,:s,.X123X$,.c,<CR>

" Toggle Tagbar.
map <F8> :TagbarToggle<CR>

" Reload config file.
nmap <F5> :source ~/.vim/vimrc<CR>

" imap -- -
" imap --- —
" imap thx<CR> Thanks for setting up a bridge!  I tested it and it works just fine.

" Call aspell when pressing <F12>.
map <F12> :w!<CR>:!aspell --lang=en-US check %<CR>:e! %<CR>

" Treat wrapped lines like actual lines when moving the cursor.
nmap j gj
nmap k gk

" Trigger NERDTree using \e.
nmap \e :NERDTreeToggle<CR>

" Replace links like <https://trac.torproject.org/projects/tor/ticket/30512>
" with links of the form <https://bugs.torproject.org/30512> by pressing \b in
" normal mode.
nmap \b :% s/https:\/\/trac\.torproject\.org\/projects\/tor\/ticket\/\(\d\+\)\(#ticket\)\?/https:\/\/bugs\.torproject\.org\/\1/g<CR>


" " " " " " " " " " " " " " " " " " " " " " " " " " " " " " " " " " " " " " " "
" Options
" " " " " " " " " " " " " " " " " " " " " " " " " " " " " " " " " " " " " " " "

" Switch on syntax highlighting.
syntax on

" Copy indent from current line when starting a new line.
set autoindent

" When a file has been detected to have been changed outside of Vim and it has
" not been changed inside of Vim, automatically read it again.
set autoread

set backspace=indent,eol,start

" Use rename-and-write-new method whenever safe.
set backupcopy=auto

" List of directories for the backup file, separated with commas.
set backupdir^=~/.vim/sessions//

" Highlight the screen line of the cursor.
set cursorline

" Define dictionary file for word completion.
set dictionary=/usr/share/dict/words

" Protect changes between writes.  Default values of updatecount (200
" keystrokes) and updatetime (4 seconds) are fine.  Taken from:
" <https://begriffs.com/posts/2019-07-19-history-use-vim.html?hn=3>
set swapfile

" List of directory names for the swap file, separated with commas.
set directory^=~/.vim/sessions

" Sets the character encoding used inside Vim.
set encoding=utf8

" Characters to fill the statuslines and vertical separators.
set fillchars=vert:\ ,fold:<

" Close fold when cursor isn't in it and when set to "all".
" set foldclose=all

" The kind of folding used for the current window.
" set foldmethod=marker

" All folds will be opened when the cursor moves into a closed field.
" set foldopen=all

" Required by vim-latexsuite.
set grepprg=grep\ -nH\ $*

" Cursor is a block for n/v/c mode.
set guicursor=n-v-c:block-Cursor

" Don't blink in n/v/c mode.
set guicursor+=n-v-c:blinkon0

" Cursor is a vertical line for insert mode.
set guicursor+=i:ver25-iCursor

" Set font for GUI.
set guifont=Roboto\ Mono\ Regular\ 8

" Remove titlebar.
set guioptions-=T

" Remove menubar.
set guioptions-=m

" The case of normal letters is ignored.
set ignorecase

" The number of executed command lines to remember.
set history=1000

" When there is a previous search pattern, highlight all its matches.
set hlsearch

" While typing a search command, show where the pattern, as it was typed so far,
" matches.
set incsearch

" When doing keyword completion, the case of the match is adjusted depending on
" the typed text.
set infercase

" The last window will always have a status line.
set laststatus=2

" Make whitespace characters visible.
set list

" Tenths of a second to show the matching paren, when 'showmatch' is set.
set matchtime=3

" Enable mouse use in all modes.
set mouse=r

" Don't keep backup file after writing to disk.
set nobackup

" No compatibility with vi(1) means being more useful.
set nocompatible

" Don't ring the bell (beep or screen flash) for error messages.
set noerrorbells

" Expand tabs to spaces in insert mode.
set expandtab

" Use hybrid line numbers -- a mixture of absolute and relative numbers.
set number relativenumber

" Show the line and column number of the cursor position, separated by a comma.
set ruler

" Number of lines to scroll with CTRL-U and CTRL-D commands.
set scroll=8

" Minimal number of screen lines to keep above and below the cursor.
set scrolloff=5

" Round indent to multiple of 'shiftwidth'.
set shiftround

" Number of spaces for each step of (auto)indent.
set shiftwidth=4

" Show at beginning of wrapped lines.
set showbreak=↳\

" Show (partial) command in the last line of the screen.
set showcmd

" When a bracket is inserted, briefly jump to the matching one.
set showmatch

" The minimal number of screen columns to keep to the left and to the right of
" the cursor if 'nowrap' is set.
set sidescrolloff=3

" Make search case sensitive when capital letters are used.
set smartcase

" Do smart autoindenting when starting a new line.
set smartindent

" Do something smart when inserting a <Tab> in front of a line.
set smarttab

" Create status bar at the bottom of the window.
set statusline=
set statusline+=%f\                          " file name
set statusline+=%h%m%r%w                     " flags
set statusline+=\[%{strlen(&ft)?&ft:'none'}, " filetype
set statusline+=%{&encoding},                " encoding
set statusline+=%{&fileformat}]              " file format
set statusline+=%=                           " right align
set statusline+=0x%-8B\                      " current char
set statusline+=%-14.(%l,%c%V%)\ %<%P        " offset

" Ignore these file extensions when tab completion is used.
set suffixes+=.pyc

" A <Tab> counts for 4 number of spaces.
set tabstop=4

" Encoding used for the terminal.
set termencoding=utf-8

" Maximum width of text that is being inserted before a line break.
set textwidth=80

" Number of colors.
set t_Co=256
" set t_Co=16

" Persist the undo tree for each file.
" set undofile
" set undodir^=~/.vim/undo//

" For vim-gitgutter to update faster:
" <https://github.com/airblade/vim-gitgutter>
set updatetime=100

" Make it easy to edit, say, tabular data by just clicking anywhere in the
" window to add text.
" set virtualedit=all

" When 'wildmenu' is on, command-line completion operates in an enhanced mode.
set wildmenu

" Have backup file only for writing to disk and delete it on success.
set writebackup

" Use <C-L> to clear the highlighting of :set hlsearch.
if maparg('<C-L>', 'n') ==# ''
  nnoremap <silent> <C-L> :nohlsearch<CR><C-L>
endif

" Toggle spellchecking when F12 is pressed.
nnoremap <F12> :call ToggleSpellcheck()<CR>
function! ToggleSpellcheck()
  if &spell == 'a'
    setlocal spell spelllang=en_gb
    echo "Enabling spellcheck."
  else
    setlocal nospell
    echo "Disabling spellcheck."
  endif
endfunction

let g:ale_linters = {
\   'javascript': ['standard'],
\}
let g:ale_fixers = {'javascript': ['standard']}
let g:ale_lint_on_save = 1
let g:ale_fix_on_save = 1

" Automatically run gofmt(1) when saving a file.
let g:go_fmt_command = "gofmt"
let g:go_fmt_options = "-s"
" let g:go_fmt_options = {
"     \ 'gofmt': '-s',
"     \ }

" Automatically use powerline fonts.
let g:airline_powerline_fonts = 1
let g:airline#extensions#tabline#enabled = 1

" Don't let the Terminus plugin override my mouse configuration.
let g:TerminusMouse=0

" The documentation of indentLine is available at:
" https://github.com/Yggdroot/indentLine/blob/master/doc/indentLine.txt
let g:indentLine_color_term = 236
let g:indentLine_bgcolor_term = 256
" let g:indentLine_fileType = ['py']
let g:indentLine_setConceal = 0

" Required by vim-latexsuite.
filetype plugin on
filetype indent on
let g:tex_flavor='latex'
let g:tex_comment_nospell=1
let g:Tex_DefaultTargetFormat='pdf'


" set statusline+=%#warningmsg#
" set statusline+=%{SyntasticStatuslineFlag()}
" set statusline+=%*
" let g:syntastic_always_populate_loc_list = 1
" let g:syntastic_auto_loc_list = 1
" let g:syntastic_check_on_open = 1
" let g:syntastic_check_on_wq = 0

" colorscheme Tomorrow-Night
colorscheme nord

" Display tabs and trailing spaces.
if (&termencoding == "utf-8")
  set listchars=tab:→\ ,trail:·,extends:>,precedes:<,nbsp:+
else
  set listchars=tab:>\ ,trail:-
endif

iabbrev dts <C-R>=strftime("%Y-%m-%d")<CR>
iabbrev witem <C-R>=strftime("- %T:")<CR>

" Jump to the latest position when re-opening a file.  This is unpleasant when
" dealing with git commit messages.
" if has("autocmd")
"   au BufReadPost * if line("'\"") > 1 && line("'\"") <= line("$") | exe "normal! g'\"" | endif
" endif

augroup vimrc_autocmd
    autocmd!
    " Expand <Tab> when writing Python in accordance with PEP8.
    " autocmd BufWritePost *.py  call Flake8()
    autocmd FileType python    set expandtab textwidth=79
    autocmd FileType gitcommit set textwidth=72
    autocmd FileType bib       set textwidth=0 noexpandtab
    autocmd FileType go        compiler go
    autocmd FileType go        set textwidth=0
    autocmd FileType go        set colorcolumn=80
    autocmd FileType html      set textwidth=0
    autocmd FileType html      set colorcolumn=100
    autocmd FileType markdown  set shiftwidth=2
    " Very slow in LaTeX.
    autocmd FileType tex       :NoMatchParen
    autocmd FileType tex       set nocursorline shiftwidth=2
augroup END

set cc=+1  " highlight column after 'textwidth'
":set cc=+1,+2,+3  " highlight three
hi ColorColumn ctermbg=236 guibg=grey

hi SpellBad   ctermbg=0  ctermfg=250
hi SpellLocal ctermbg=58 ctermfg=250
hi SpellRare  ctermbg=22 ctermfg=250
hi SpellCap   ctermbg=57 ctermfg=250

" Some Linux distributions set filetype in /etc/vimrc.
" Clear filetype flags before changing runtimepath to force Vim to reload them.
if exists("g:did_load_filetypes")
  filetype off
  filetype plugin indent off
endif
set runtimepath+=/home/phw/sw/golang/misc/vim
filetype plugin indent on

set runtimepath-=~/.vim/bundle/vimacs

set conceallevel=0

" execute pathogen#infect()

hi Normal guibg=NONE ctermbg=NONE


